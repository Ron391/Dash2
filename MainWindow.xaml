<Window x:Class="Dash2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dash2"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        mc:Ignorable="d"
        Title="MainWindow" Height="510" Width="800" Style="{DynamicResource WindowStyle1}" AllowsTransparency="True" WindowStyle="None" WindowStartupLocation="CenterScreen" Background="Black">
    <Window.Resources>
        <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="WindowStyle1" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="10" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="icons8-home-48 (1).png" Margin="9,9,0,0"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="icons8-service-bell-48.png" Margin="9,9,0,0"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="icons8-user-group-48.png" Margin="9,9,0,0"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle4" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="icons8-stack-of-paper-30.png" Margin="9,9,0,0"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle5" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Image HorizontalAlignment="Left" Height="26" VerticalAlignment="Top" Width="26" Source="icons8-setting-32.png" Margin="9,8,0,0"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}"/>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle6" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Style.BasedOn>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="{DynamicResource RegionBrush}"/>
                    <Setter Property="hc:BorderElement.CornerRadius" Value="4"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <hc:SimplePanel>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding (hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Path x:Name="PathMain" Data="{TemplateBinding hc:IconElement.Geometry}" Fill="{TemplateBinding Foreground}" Height="{TemplateBinding hc:IconElement.Height}" Stretch="Uniform" SnapsToDevicePixels="True" Width="{TemplateBinding hc:IconElement.Width}"/>
                                            <ContentPresenter x:Name="ContentPresenterMain" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Margin="6,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                    <TextBlock HorizontalAlignment="Left" Height="15" TextWrapping="Wrap" Text="&gt;" VerticalAlignment="Top" Width="15" Margin="7.5,2,0,0" FontSize="14" FontWeight="Bold" Foreground="White"/>
                                </hc:SimplePanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Content" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                                        <Setter Property="Visibility" TargetName="PathMain" Value="Collapsed"/>
                                        <Setter Property="Margin" TargetName="ContentPresenterMain" Value="0"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.BasedOn>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Padding" Value="10,6"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextIconBrush}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Style.BasedOn>
                                <Style TargetType="{x:Type Control}">
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                                    <Setter Property="FontSize" Value="12"/>
                                    <Setter Property="FocusVisualStyle">
                                        <Setter.Value>
                                            <Style>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <Rectangle RadiusY="4" RadiusX="4">
                                                                <Rectangle.Style>
                                                                    <Style TargetType="{x:Type Rectangle}">
                                                                        <Setter Property="Margin" Value="-2"/>
                                                                        <Setter Property="Opacity" Value="0.6"/>
                                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                        <Setter Property="Stroke" Value="{DynamicResource SecondaryBorderBrush}"/>
                                                                        <Setter Property="StrokeThickness" Value="2"/>
                                                                        <Setter Property="StrokeDashArray" Value="1 1"/>
                                                                    </Style>
                                                                </Rectangle.Style>
                                                            </Rectangle>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Style.BasedOn>
                        </Style>
                    </Style.BasedOn>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Rectangle Fill="#FF0C0C0C" HorizontalAlignment="Left" Height="510" Margin="65,0,0,0" Stroke="Black" VerticalAlignment="Top" Width="735" RadiusY="10" RadiusX="10"/>
        <Grid Margin="15.511,26.011,751.511,451.011">
            <Rectangle Fill="White" HorizontalAlignment="Left" Height="32.978" RadiusY="4.5" RadiusX="4.5" Stroke="Black" VerticalAlignment="Top" Width="32.978" RenderTransformOrigin="0.5,0.5">
                <Rectangle.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-45"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Rectangle.RenderTransform>
            </Rectangle>
            <Ellipse Fill="Black" HorizontalAlignment="Left" Height="20" Margin="6.489,6.989,0,0" Stroke="Black" VerticalAlignment="Top" Width="20"/>

        </Grid>
        <Button Content="Button" HorizontalAlignment="Left" Height="45" Margin="10,120,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle1}"/>
        <Button Content="Button" HorizontalAlignment="Left" Height="45" Margin="10,185,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle2}"/>
        <Button Content="Button" HorizontalAlignment="Left" Height="45" Margin="10,255,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle3}"/>
        <Button Content="Button" HorizontalAlignment="Left" Height="45" Margin="10,325,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle4}"/>
        <Button Content="Button" HorizontalAlignment="Left" Height="45" Margin="10,395,0,0" VerticalAlignment="Top" Width="45" Style="{DynamicResource ButtonStyle5}"/>
        <hc:SearchBar HorizontalAlignment="Left" Height="30" Margin="395,10,0,0" TextWrapping="Wrap" Text="SearchBar" VerticalAlignment="Top" Width="380" Background="White"/>
        <TextBlock HorizontalAlignment="Left" Height="30" Margin="100,10,0,0" TextWrapping="Wrap" Text="Dashboard" VerticalAlignment="Top" Width="250" Foreground="#FFFDFDFD" FontSize="24" FontWeight="Bold"/>
        <hc:Card HorizontalAlignment="Left" Height="185" Margin="100,70,0,0" VerticalAlignment="Top" Width="135" Background="Black" BorderBrush="#FF131313"/>
        <hc:Card Content="" HorizontalAlignment="Left" Height="185" Margin="250,70,0,0" VerticalAlignment="Top" Width="135" Background="Black" BorderBrush="#FF131313"/>
        <hc:Card Content="" HorizontalAlignment="Left" Height="185" Margin="401,70,0,0" VerticalAlignment="Top" Width="135" Background="Black" BorderBrush="#FF131313"/>
        <hc:Card Content="" HorizontalAlignment="Left" Height="185" Margin="550,70,0,0" VerticalAlignment="Top" Width="225" Background="Black" BorderBrush="#FF131313"/>
        <hc:Card HorizontalAlignment="Left" Height="215" Margin="550,275,0,0" VerticalAlignment="Top" Width="225" Background="Black" BorderBrush="#FF131313"/>
        <hc:Card HorizontalAlignment="Left" Height="215" Margin="100,275,0,0" VerticalAlignment="Top" Width="436" Background="Black" BorderBrush="#FF131313">
            <local:UserControl2 HorizontalAlignment="Left" Height="194" Margin="11.5,10,0,0" VerticalAlignment="Top" Width="414.5"/>
        </hc:Card>
        <Grid Margin="112.5,85,577.5,267.5">
            <Button Content="" HorizontalAlignment="Left" Height="25" Margin="85,125.393,0,0" VerticalAlignment="Top" Width="25" Style="{DynamicResource ButtonStyle6}"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,0,0,0" TextWrapping="Wrap" Text="Priscella Pena" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="10"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Source="gamer (3).png"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,15,0,0" TextWrapping="Wrap" Text="Rating 4.8" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>
            <TextBlock HorizontalAlignment="Left" Height="80" Margin="0,45,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="110" Foreground="White" FontSize="7"><Run Text="L/T Sub&#x9;&#x9;&#x9;27%"/><LineBreak/><Run/><LineBreak/><Run Text="S / T Offer&#x9;&#x9;12%"/><LineBreak/><Run/><LineBreak/><Run Text="O / T Fund&#x9;&#x9;9%"/><LineBreak/><Run/><LineBreak/><Run Text="New Funded&#x9;&#x9;6%"/></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,125,0,0" TextWrapping="Wrap" Text="$520,700" VerticalAlignment="Top" Width="60" Foreground="White" FontWeight="Bold"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,142.5,0,0" TextWrapping="Wrap" Text="Total Funded" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>

        </Grid>
        <Grid Margin="263.5,85,426.5,267.5">
            <Button Content="" HorizontalAlignment="Left" Height="25" Margin="85,125.393,0,0" VerticalAlignment="Top" Width="25" Style="{DynamicResource ButtonStyle6}"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,0,0,0" TextWrapping="Wrap" Text="Nathan Rich" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="10"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Source="gamer (1).png"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,15,0,0" TextWrapping="Wrap" Text="Rating 4.1" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>
            <TextBlock HorizontalAlignment="Left" Height="80" Margin="0,45,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="110" Foreground="White" FontSize="7"><Run Text="L/T Sub&#x9;&#x9;&#x9;27%"/><LineBreak/><Run/><LineBreak/><Run Text="S / T Offer&#x9;&#x9;12%"/><LineBreak/><Run/><LineBreak/><Run Text="O / T Fund&#x9;&#x9;9%"/><LineBreak/><Run/><LineBreak/><Run Text="New Funded&#x9;&#x9;6%"/></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,125,0,0" TextWrapping="Wrap" Text="$507,400" VerticalAlignment="Top" Width="60" Foreground="White" FontWeight="Bold"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,142.5,0,0" TextWrapping="Wrap" Text="Total Funded" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>

        </Grid>
        <Grid Margin="413.5,85,276.5,267.5">
            <Button Content="" HorizontalAlignment="Left" Height="25" Margin="85,125.393,0,0" VerticalAlignment="Top" Width="25" Style="{DynamicResource ButtonStyle6}"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,0,0,0" TextWrapping="Wrap" Text="Dwight Flores" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="10"/>
            <Image HorizontalAlignment="Left" Height="30" VerticalAlignment="Top" Width="30" Source="gamer.png"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="40,15,0,0" TextWrapping="Wrap" Text="Rating 4.5" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>
            <TextBlock HorizontalAlignment="Left" Height="80" Margin="0,45,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="110" Foreground="White" FontSize="7"><Run Text="L/T Sub&#x9;&#x9;&#x9;27%"/><LineBreak/><Run/><LineBreak/><Run Text="S / T Offer&#x9;&#x9;12%"/><LineBreak/><Run/><LineBreak/><Run Text="O / T Fund&#x9;&#x9;9%"/><LineBreak/><Run/><LineBreak/><Run Text="New Funded&#x9;&#x9;6%"/></TextBlock>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,125,0,0" TextWrapping="Wrap" Text="$498,500" VerticalAlignment="Top" Width="60" Foreground="White" FontWeight="Bold"/>
            <TextBlock HorizontalAlignment="Left" Height="15" Margin="0,142.5,0,0" TextWrapping="Wrap" Text="Total Funded" VerticalAlignment="Top" Width="60" Foreground="White" FontSize="7"/>

        </Grid>
        <TextBlock HorizontalAlignment="Left" Height="31.011" Margin="565,82.84,0,0" TextWrapping="Wrap" Text="Sales Statistics" VerticalAlignment="Top" Width="105" Foreground="White" FontSize="14" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Height="45" Margin="565,120,0,0" TextWrapping="Wrap" Text="32%" VerticalAlignment="Top" Width="80" Foreground="White" FontSize="30" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Height="20" Margin="565,153.13,0,0" TextWrapping="Wrap" Text="AVG Lead to Sub" VerticalAlignment="Top" Width="90" Foreground="White" FontSize="11"/>
        <TextBlock HorizontalAlignment="Left" Height="45" Margin="670,120,0,0" TextWrapping="Wrap" Text="17%" VerticalAlignment="Top" Width="80" Foreground="White" FontSize="30" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Height="20" Margin="670,153.13,0,0" TextWrapping="Wrap" Text="AVG Lead to Offer" VerticalAlignment="Top" Width="90" Foreground="White" FontSize="11"/>
        <TextBlock HorizontalAlignment="Left" Height="45" Margin="565,176.87,0,0" TextWrapping="Wrap" Text="25%" VerticalAlignment="Top" Width="80" Foreground="White" FontSize="30" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Height="20" Margin="565,210,0,0" TextWrapping="Wrap" Text="AVG Offer to Fund" VerticalAlignment="Top" Width="90" Foreground="White" FontSize="11"/>
        <TextBlock HorizontalAlignment="Left" Height="45" Margin="670,176.87,0,0" TextWrapping="Wrap" Text="5%" VerticalAlignment="Top" Width="80" Foreground="White" FontSize="30" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Height="20" Margin="670,210,0,0" TextWrapping="Wrap" Text="AVG Lead to Fund" VerticalAlignment="Top" Width="90" Foreground="White" FontSize="11"/>
        <local:UserControl1 HorizontalAlignment="Left" Height="190" Margin="565,289,0,0" VerticalAlignment="Top" Width="195"/>

    </Grid>
</Window>
